// This file has been autogenerated from a class added in the UI designer.

using System;
using AircraftForSale.PCL.Helpers;
using Foundation;
using UIKit;

namespace AircraftForSale
{
	public partial class PushNotificationPromptViewController : UIViewController
	{
		public PushNotificationPromptViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            View.BackgroundColor = UIColor.Clear;
            View.Opaque = false;

            backgroundView.Layer.CornerRadius = 25;

            yesButton.Layer.CornerRadius = yesButton.Bounds.Height / 2;
            noButton.Layer.CornerRadius = noButton.Bounds.Height / 2;
        }

        public override void ViewWillAppear(bool animated)
        {
            base.ViewWillAppear(animated);
            //closeButton.TouchUpInside += CloseButton_TouchUpInside;
            yesButton.TouchUpInside += YesButton_TouchUpInside;
            noButton.TouchUpInside += NoButton_TouchUpInside;

        }

        void NoButton_TouchUpInside(object sender, EventArgs e)
        {
            Settings.IsRegisterForPushNotifications = false;
            DismissModalViewController(true);
        }


        void YesButton_TouchUpInside(object sender, EventArgs e)
        {
            Settings.IsRegisterForPushNotifications = true;
            ((AppDelegate)UIApplication.SharedApplication.Delegate).PromptForPushNotifications();
            DismissModalViewController(true);
        }


        //void CloseButton_TouchUpInside(object sender, EventArgs e)
        //{
        //    DismissModalViewController(true);
        //}


        public override void ViewWillDisappear(bool animated)
        {
            base.ViewWillDisappear(animated);
            //closeButton.TouchUpInside -= CloseButton_TouchUpInside;
            yesButton.TouchUpInside -= YesButton_TouchUpInside;
            noButton.TouchUpInside -= NoButton_TouchUpInside;
        }
    }
}
